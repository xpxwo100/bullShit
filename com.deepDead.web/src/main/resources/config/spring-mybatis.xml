<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tool="http://www.springframework.org/schema/tool" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
	http://www.springframework.org/schema/beans/spring-beans.xsd  
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx.xsd  
	http://www.springframework.org/schema/aop  
	http://www.springframework.org/schema/aop/spring-aop.xsd  
	http://www.springframework.org/schema/jee  
	http://www.springframework.org/schema/jee/spring-jee.xsd  
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context.xsd  
	http://www.springframework.org/schema/util  
	http://www.springframework.org/schema/util/spring-util.xsd  
	http://www.springframework.org/schema/tool  
	http://www.springframework.org/schema/tool/spring-tool.xsd
	http://www.springframework.org/schema/task 
	http://www.springframework.org/schema/task/spring-task.xsd ">
	<!-- 引入配置文件 -->
	<!-- 或 -->
	<!-- <context:property-placeholder location="classpath:config/jdbc.properties"/> -->
	<!-- 或 -->
	<!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config/jdbc.properties" />
	</bean> -->
	<!-- 或 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
        <array>
            <value>classpath:config/jdbc.properties</value>
            <value>classpath:config/log4j.properties</value>
        </array>
    </property>
	</bean>
	<!-- 或 要使用这种方式加载的properties文件，需要使用#{beanId['键']}，如上面的，#{configProperties['db.url']}使用这种方式便可以得到db.url的值，-->
	<!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
         <property name="locations">
             <list>
               	 <value>classpath:config/jdbc.properties</value>
           		 <value>classpath:config/log4j.properties</value>
             </list>
         </property>
     </bean> -->
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- mybatis配置文件路径 -->
		<property name="configLocation" value="classpath:config/sqlmapconfig.xml" />
		<!-- mapper配置文件路径，如果配置文件和接口文件位置不一致，则需配置 -->
		<property name="mapperLocations" value="classpath*:cn/com/deepDead/daomapper/**/*Mapper.xml" />
	</bean>
	<!--扫描myBatis接口,接口直接与xml文件进行映射 -->
	<!--basePackage指定要扫描的包，可指定多个包，包与包之间用逗号或分号分隔 -->
	<!-- spring 注解mapper使用，对于同一dao对象只能有一个扫描对象， -->
	<bean name="mybatisScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="annotationClass" value="org.springframework.stereotype.Repository"/>
		<property name="basePackage" value="cn.com.deepDead.daomapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />  
	</bean>
 <!-- Transaction manager for a single JDBC DataSource -->
  <bean id="transactionManager_mybatis" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<property name="validateExistingTransaction" value="true" />
		<!-- 定义多数据源限定符 -->
		<qualifier value="simple" />
  </bean>
  <!-- 使用annotation定义事务 -->
  <tx:annotation-driven transaction-manager="transactionManager_mybatis" /> 

</beans>